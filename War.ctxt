#BlueJ class context
comment0.target=War
comment0.text=\r\n\ Create\ the\ armies\ and\ simulate\ the\ battle\r\n\r\n\ @author\ Matthew\ Schilling\r\n\ @version\ 11.27.2017\r\n
comment1.params=
comment1.target=War()
comment1.text=\r\n\ Create\ the\ two\ armies,\ letting\ the\ randomizer\ determine\ what\ subclasses\ will\ be\r\n\ added\ for\ each\ side.\ Adjust\ the\ index\ boundries\ for\ larger\ battles\r\n
comment2.params=
comment2.target=void\ battle()
comment2.text=\r\n\ Start\ the\ "battle"\ by\ stepping\ through\ the\ arraylists\ with\ an\r\n\ index\ and\ the\ get\ method,\ and\ using\ a\ while\ loop\ to\ check\ if\ each\ object\r\n\ at\ the\ index\ is\ still\ returning\ true\ for\ its\ isAlive\ method.\ Once\ a\ creature\ has\r\n\ taken\ more\ damage\ than\ its\ max\ health,\ we\ increment\ the\ index\ for\ that\ army's\ \r\n\ arraylist\ to\ move\ to\ the\ next\ creature.\ This\ is\ repeated\ until\ one\ arraylist\ has\r\n\ been\ completley\ steeped\ through.\ And\ as\ each\ creature\ is\ defeated,\ we\ add\ +1\ to\ \r\n\ the\ count\ of\ fallen\ for\ that\ army.\r\n\ \r\n\ There\ are\ also\ a\ few\ println\ tests\ in\ place\ to\ show\ what\ the\ arraylists\ actually\r\n\ contain,\ health\ levels\ after\ damage\ has\ been\ taken,\ a\ message\ as\ each\ creature\r\n\ is\ determined\ to\ be\ "dead",\ and\ a\ final\ body\ count\ is\ displayed\ after\ the\ loop\r\n\ has\ finished.\ \r\n
numComments=3
